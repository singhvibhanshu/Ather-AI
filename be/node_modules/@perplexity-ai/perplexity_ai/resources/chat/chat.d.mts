import { APIResource } from "../../core/resource.mjs";
import * as Shared from "../shared.mjs";
import * as CompletionsAPI from "./completions.mjs";
import { CompletionCreateParams, CompletionCreateParamsNonStreaming, CompletionCreateParamsStreaming, Completions } from "./completions.mjs";
export declare class Chat extends APIResource {
    completions: CompletionsAPI.Completions;
}
export interface StreamChunk {
    id: string;
    choices: Array<Shared.Choice>;
    created: number;
    model: string;
    usage: Shared.UsageInfo;
    citations?: Array<string> | null;
    object?: string;
    search_results?: Array<Shared.APIPublicSearchResult> | null;
    status?: 'PENDING' | 'COMPLETED' | null;
    type?: 'message' | 'info' | 'end_of_stream' | null;
}
export declare namespace Chat {
    export { type StreamChunk as StreamChunk };
    export { Completions as Completions, type CompletionCreateParams as CompletionCreateParams, type CompletionCreateParamsNonStreaming as CompletionCreateParamsNonStreaming, type CompletionCreateParamsStreaming as CompletionCreateParamsStreaming, };
}
//# sourceMappingURL=chat.d.mts.map